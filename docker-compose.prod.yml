version: '3.8'

services:
  medspace:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: medspace-production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=https://med-cortex.com/api/v1
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_DISABLE_CREDENTIALS=true
      - NEXT_PUBLIC_APP_NAME=MedSpace
      - NEXT_PUBLIC_APP_VERSION=1.0.0
    volumes:
      # Mount uploads directory for persistent storage
      - ./uploads:/app/uploads
      # Mount logs directory for log persistence
      - ./logs:/app/logs
    restart: unless-stopped
    
    # Health check configuration
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Network configuration
    networks:
      - medspace-network

  # Optional: Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    container_name: medspace-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - medspace
    restart: unless-stopped
    networks:
      - medspace-network

networks:
  medspace-network:
    driver: bridge

volumes:
  uploads:
    driver: local
  logs:
    driver: local
